# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                                                                                         #
#                   This repository uses IOGX to structure its nix code                   #
#                         This IOGX revision is dated 22 Jun 2023                         #
#   https://www.github.com/zeme-wana/iogx/tree/6a7c9bb312b13b4b638edc0484fcc29eab40c06a   #
#                      Documentation is available at ./nix/README.md                      #
#                     Please do not delete this autogenerated comment                     #
#                                                                                         #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #


# This file has been generated by: 
# 
#   nix flake init --template github:zeme-wana/iogx
# 
# You should now do the following:
# 
#   1. Read through this entire file once
#   2. Change the flake description field (line 28)
#   3. Override or add new flake inputs (line 60)
#   4. Refer to the ./nix/README.md for documentation
#   5. Run `nix develop` and read the available commands in the menu
#   6. Run `cabal test all` to ensure that everything is working
#   7. Delete the comments in this file as needed
{

  # Arbitrary description for this flake.
  # It is displayed when running `nix flake info` and other flake commands.
  description = "";

  # The following inputs are managed by IOGX:
  # 
  #   CHaP, flake-utils, haskell.nix, nixpkgs, hackage, 
  #   iohk-nix, sphinxcontrib-haddock, pre-commit-hooks-nix, 
  #   haskell-language-server, nosys
  # 
  # Do not add those inputs again here, or you will get a warning message
  # when running flake commands such as `nix develop` and `nix build`.
  # If you need to, you should override these inputs instead.
  # For example, if you need a newer version of hackage:
  #
  #   inputs = {
  #     iogx.url = "github:zeme-iohk/iogx";
  #     iogx.inputs.hackage.url = "github:input-output-hk/hackage/git-rev-sha";
  #   }
  #
  # Or equivalently:
  # 
  #  inputs = {
  #    hackage = {
  #      url = "github:input-output-hk/hackage";
  #      flake = false;
  #    };
  #    iogx.url = "github:zeme-iohk/iogx";
  #    iogx.inputs.hackage.follows = "hackage";
  #  }
  inputs = {

    iogx.url = "github:zeme-iohk/iogx";

    # Other inputs not managed by IOGX can be added as usual, for example:
    # foobar.url = "github:foo/bar";
  };

  # This line is boilerplate, do not change it.
  # mkFlake will generate the outputs based on the contents of the ./nix folder.
  outputs = inputs: inputs.iogx.lib.mkFlake inputs;

  # This nixConfig is picked up by flake commands such as `nix develop`.
  # In order for it to work, your /etc/nix/nix.conf must include these lines:
  #
  #   trusted-users = $USER
  #   experimental-features = nix-command flakes
  #
  # Replace $USER with the result of running whoami.
  nixConfig = {

    # Do not remove these two substitures, but add to them if you wish.
    extra-substituters = [
      "https://cache.iog.io"
      "https://cache.zw3rk.com"
    ];

    # Do not remove these two public-keys, but add to them if you wish.
    extra-trusted-public-keys = [
      "hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ="
      "loony-tools:pr9m4BkM/5/eSTZlkQyRt57Jz7OMBxNSUiMC4FkcNfk="
    ];

    # Do not remove this: it's needed by haskell.nix.
    allow-import-from-derivation = true;
  };
}
